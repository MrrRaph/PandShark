package protocols.dhcp.option;

import protocols.dhcp.exceptions.UnknownDHCPOption;

public enum DHCPOptionCode {
    PAD(0, "Pad"),
    SUBNET_MASK(1, "Subnet Mask"),
    TIME_OFFSET(2, "Time Offset"),
    ROUTER(3, "Router"),
    TIME_SERVER(4, "Time Server"),
    NS(5, "Name Server"),
    DNS(6, "Domain Name Server"),
    LOG_SERVER(7, "Log Server"),
    QUOTE_SERVER(8, "Quote Server"),
    LPR_SERVER(9, "LPR Server"),
    IMPRESS_SERVER(10, "Impress Server"),
    RLS(11, "Resource Location Server"),
    HOSTNAME(12, "Host Name"),
    BFS(13, "Boot File Size"),
    MDF(14, "Merit Dump File"),
    DOMAIN_NAME(15, "Domain Name"),
    SS(16, "Swap Server"),
    ROOT_PATH(17, "Root Path"),
    EXTENSIONS_PATH(18, "Extensions Path"),
    IP_FORWARDING(19, "IP Forwarding enable/disable"),
    NLSR(20, "Non-local Source Routing enable/disable"),
    POLICY_FILTER(21, "Policy Filter"),
    MDRS(22, "Maximum Datagram Reassembly Size"),
    DEFAULT_TTL(23, "Default IP Time-to-live"),
    PMAT(24, "Path MTU Aging Timeout"),
    PMPT(25, "Path MTU Plateau Table"),
    IM(26, "Interface MTU"),
    ASL(27, "All Subnets are Local"),
    BROADCAST(28, "Broadcast Address"),
    PMD(29, "Perform Mask Discovery"),
    MASK_SUPPLIER(30, "Mask supplier"),
    PFD(31, "Perform Router Discovery"),
    RSA(32, "Router Solicitation Address"),
    SRT(33, "Static Routing Table"),
    TRAILER_ENCAPSULATION(34, "Trailer Encapsulation"),
    ARP_CACHE_TIMEOUT(35, "ARP Cache Timeout"),
    ETHERNET_ENCAPSULATION(36, "Ethernet Encapsulation"),
    DEFAULT_TCP_TTL(37, "Default TCP TTL"),
    TCP_KEEPALIVE_INTERVAL(38, "TCP Keepalive Interval"),
    TCP_KEEPALIVE_GARBAGE(39, "TCP Keepalive Garbage"),
    NISD(40, "Network Information Service Domain"),
    NIS(41, "Network Information Servers"),
    NTP_SERVERS(42, "NTP Servers"),
    VENDOR_INFO(43, "Vendor Specific Information"),
    NETBIOSNS(44, "NetBIOS over TCP/IP Name Server"),
    NETBIOSDDS(45, "NetBIOS over TCP/IP Datagram Distribution Server"),
    NETBIOSNT(46, "NetBIOS over TCP/IP Node Type"),
    NETBIOSSCOPE(47, "NetBIOS over TCP/IP Scope"),
    XWINDOW_SFS(48, "X Window System Font Server"),
    XWINDOW_SDM(49, "X Window System Display Manager"),
    RIPA(50, "Requested IP Address"),
    IPALT(51, "IP Address Lease Time"),
    OPT_OVERLOAD(52, "Option Overload"),
    DHCP_MESSAGETYPE(53, "DHCP Message Type"),
    SERVERID(54, "Server Identifier"),
    PARAM_REQUEST_LIST(55, "Parameter Request List"),
    MESSAGE(56, "Message"),
    MAX_DHCP_MSGSIZE(57, "Maximum DHCP Message Size"),
    RENEW_TIMEVALUE(58, "Renew Time Value"),
    REBINDING_TIMEVALUE(59, "Rebinding Time Value"),
    CLASSID(60, "Class Identifier"),
    CLIENTID(61, "Client Identifier"),
    NETWARE_IP_DOMAIN_NAME(62, "NetWare/IP Domain Name"),
    NETWARE_IP_INFO(63, "NetWare/IP Information"),
    NISPLUSD(64, "Network Information Service+ Domain"),
    NISS(65, "Network Information Service+ Servers"),
    TFTP(66, "TFTP Server Name"),
    BOOTFILENAME(67, "Bootfile Name"),
    MOBILEIP_HA(68, "Mobile IP Home Agent"),
    SMTPS(69, "SMTP Server"),
    POPS(70, "POP Server"),
    NNTPS(71, "NNTP Server"),
    DWWWS(72, "Default World Wide Web Server"),
    DFS(73, "Default Finger Server"),
    DIRCS(74, "Default IRC Server"),
    STREET_TALK_SERVER(75, "StreetTalk Server"),
    STREET_TALK_DIRASSIST(76, "StreetTalk Directory Assistance Server"),
    UCI(77, "User Class Information"),
    SLPDA(78, "SLP Directory Agent"),
    SLPSS(79, "SLP Service Scope"),
    RC(80, "Rapid Commit"),
    FQDN(81, "FQDN"),
    RAI(82, "Relay Agent Information"),
    ISNS(83, "Internet Storage Name Service"),
    NDSS(85, "NDS Servers"),
    NDSTN(86, "NDS Tree Name"),
    NDSC(87, "NDS Context"),
    BCMCSCDNL(88, "BCMCS Controller Domain Name List"),
    BCMCSIPAL(89, "BCMS Controller IPv4 Address List"),
    AUTH(90, "Authentication"),
    CLTT(91, "Client Last Transaction Time"),
    AI(92, "Associated IP"),
    CSAT(93, "Client System Architecture Type"),
    CNII(94, "Client Network Interface Identifier"),
    LDAP(95, "LDAP"),
    CMI(97, "Client Machine Identifier"),
    OGUA(98, "Open Group's User Authentication"),
    GEOCONF_CIVIC(99, "GEOCONF_CIVIC"),
    IEEE1003(100, "IEEE 1003.1 TZ String"),
    REFTZDB(101, "Reference to the TZ Database"),
    NPSA(112, "NetInfo Parent Server Address"),
    NPST(113, "NetInfo Parent Server Tag"),
    URL(114, "URL"),
    AC(116, "Auto-Configure"),
    NSS(117, "Name Service Search"),
    SUBNET_SELECTION(118, "Subnet Selection"),
    DNSL(119, "Domain Name Search List"),
    SIPSDHCPOPT(120, "SIP Servers DHCP Option"),
    CSRO(121, "Classless Static Route Option"),
    CCC(122, "CableLabs Client Configuration"),
    GEOCONF(123, "Geoconf"),
    VIVC(124, "Vendor-Identifying Vendor Class"),
    VIVS(125, "Vendor-Identifying Vendor-Specific"),
    TFTPSIPA(128, "TFTP Server IP Address"),
    CSIPA(129, "Call Server IP Address"),
    DS(130, "Discrimination String"),
    RSSIP(131, "Remote Statistics Server IP Address"),
    IEEE802P(132, "802.1P VLAN ID"),
    IEEE802Q(133, "802.1Q L2 Priority"),
    DCP(134, "Diffserv Code Point"),
    HTTPPPSA(135, "HTTP Proxy for Phone-Specific Applications"),
    PANAAA(136, "PANA Authentication Agent"),
    LOSTS(137, "LoST Server"),
    CAPWAPAC(138, "CAPWAP Access Controller Address"),
    IPADDRMOS(139, "Option-IPv4 Address MoS"),
    IPFQDNMOS(140, "Option-IPv4 FQDN MoS"),
    SIPUACSD(141, "SIP UA Configuration Service Domains"),
    IPV4ANDSF(142, "Option-IPv4 Address ANDSF"),
    IPV6ANDSF(143, "Option-IPv6 Address ANDSF"),
    TFTPSA(150, "TFTP Server Address/Etherboot/GRUB Configuration Path Name"),
    SC(151, "Status-Code"),
    BT(152, "Base-Time"),
    STOS(153, "Start Time of State"),
    QST(154, "Query Start Time"),
    QET(155, "Query End Time"),
    DHCP_STATE(156, "DHCP State"),
    DATASRC(157, "Data Source"),
    ETHERBOOT(175, "Etherboot"),
    IPTEL(176, "IP Telephone"),
    PACKETCABLE(177,"Etherboot/Packet Cable/Cable Home"),
    PXEMAGICSTR(208, "PXELINUX MAIGC = F1:00:74:7E (241.0.116.126)"),
    PXECONFIG(209, "PXELINUX Configfile"),
    PXEPATHPREF(210, "PXELINUX Path Prefix"),
    PXEREBOOTTIME(211, "PXELINUX Reboot Time"),
    OPT6RD(212, "OPTION_6RD"),
    OPTV4ACCESSDOMAIN(213, "OPTION V4 Access Domain"),
    SA(220, "Subnet Allocation"),
    VSS(221, "Virtual Subnet Selection"),
    END(255, "End");

    private Integer code;
    private String name;

    DHCPOptionCode(final Integer code, final String name) {
        this.code = code;
        this.name = name;
    }

    public Integer getCode() {
        return code;
    }

    @Override
    public String toString() {
        return name;
    }

    public static DHCPOptionCode fromCode(final Integer code) throws UnknownDHCPOption {
        for(DHCPOptionCode opt : DHCPOptionCode.values())
            if (opt.code.equals(code))
                return opt;
        throw new UnknownDHCPOption("DHCPOption ("+code+") unknown");
    }
}
